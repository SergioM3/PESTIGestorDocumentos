## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Document(Internal) Endpoints'
description: |-

  Document API endpoint
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/document/{id}'
    metadata:
      groupName: 'Document(Internal) Endpoints'
      groupDescription: |-

        Document API endpoint
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Documents By id'
      description: "Returns document details by it's id"
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the document.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "id": 53,
               "user_id": 6,
               "document_state": "Pending",
               "publish_date": "2025-12-22 18:00:11",
               "create_date": "2023-04-26 14:25:04",
               "update_date": null,
               "delete_date": null,
               "document_type": {
                   "id": 1,
                   "description": "Artigo Cientifico"
               },
               "document_metadata": [
                   {
                       "id": 355,
                       "value": "quis",
                       "metadata_type": {
                           "id": 1,
                           "description": "Titulo"
                       }
                   },
                   {
                       "id": 356,
                       "value": "laudantium",
                       "metadata_type": {
                           "id": 2,
                           "description": "Abstract"
                       }
                   }
               ],
               "document_media": {
                   "id": 67,
                   "model_type": "App\\Domain\\Aggregates\\Document\\Document",
                   "model_id": 53,
                   "uuid": "c6dd8e46-e8c6-4041-bc7f-cf86dcc7d6be",
                   "collection_name": "default",
                   "name": "book",
                   "file_name": "book.pdf",
                   "mime_type": "text/plain",
                   "disk": "media",
                   "conversions_disk": "media",
                   "size": 407608,
                   "manipulations": [],
                   "custom_properties": [],
                   "generated_conversions": [],
                   "responsive_images": [],
                   "order_column": 1,
                   "created_at": "2023-04-26T14:25:04.000000Z",
                   "updated_at": "2023-04-26T14:25:04.000000Z",
                   "original_url": "/storage/67/book.pdf",
                   "preview_url": ""
               },
               "document_file":
                   "JVBERi0xLjINJeLjz9MNCjY2IDAgb2JqDTw8I
                    MyBdIA0vTCAyMjkxNTYgDS9FIDIwMzU3IA0vT
                    ICAgICAgICAgICAgICAgICAgICAgICAgICAgI
                    MDAwMDE2IDAwMDAwIG4NCjAwMDAwMDExNDggM
                    OTU3IDAwMDAwIG4NCjAwMDAwMDIxNjYgMDAwM
                    IDAwMDAwIG4NCjAwMDAwMDM5MDAgMDAwMDAgb
                    MDAwIG4NCjAwMDAwMDUwOTkgMDAwMDAgbg0=="
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6cf8DEde45gkhaP631bZVav'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/document-list
    metadata:
      groupName: 'Document(Internal) Endpoints'
      groupDescription: |-

        Document API endpoint
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Documents List'
      description: 'Returns a document list of all documents if user is admin, otherwise just published documents'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: 'The id of the user.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      userId: 6
    queryParameters:
      title:
        name: title
        description: 'Filters documents by title.'
        required: false
        example: 'Titulo 1'
        type: string
        custom: []
      abstract:
        name: abstract
        description: 'Filters documents by abstract.'
        required: false
        example: 'Abstract 1'
        type: string
        custom: []
      document_state:
        name: document_state
        description: "Filters documents by it's state (Accepted Published and Pending only)."
        required: false
        example: Published
        type: string
        custom: []
      document_type:
        name: document_type
        description: "Filters documents by it's type."
        required: false
        example: 'Artigo Cientifico'
        type: string
        custom: []
      publish_date_from:
        name: publish_date_from
        description: 'datetime Filters to return only documents published after this date.'
        required: false
        example: '2020-12-22'
        type: string
        custom: []
      publish_date_to:
        name: publish_date_to
        description: 'datetime Filters to return only documents published before this date.'
        required: false
        example: '2026-12-22'
        type: string
        custom: []
      page:
        name: page
        description: 'Pagination -> number of the page to see.'
        required: false
        example: 1
        type: integer
        custom: []
      page_size:
        name: page_size
        description: 'Pagination -> number of documents to see per page.'
        required: false
        example: 10
        type: integer
        custom: []
      orderBy:
        name: orderBy
        description: 'Sorting -> Field by which documents are sorted.'
        required: false
        example: source
        type: string
        custom: []
      orderDir:
        name: orderDir
        description: 'Sorting -> Sorting direction.'
        required: false
        example: 0
        type: integer
        custom: []
    cleanQueryParameters:
      title: 'Titulo 1'
      abstract: 'Abstract 1'
      document_state: Published
      document_type: 'Artigo Cientifico'
      publish_date_from: '2020-12-22'
      publish_date_to: '2026-12-22'
      page: 1
      page_size: 10
      orderBy: source
      orderDir: 0
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 35,
           "user_id": 6,
             "document_state": "Pending",
           "publish_date": "2025-12-22 18:00:11",
           "document_type": "Artigo Cientifico",
           "document_title": "Titulo de documento",
           "doi": null,
           "url": null,
           "source": "Internal",
           "document_abstract": "quis",
           "document_keywords": [
               "laudantium"
           ],
           "document_authors": []
           }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gVakhbeavPd51ED6683Zfc4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/document-list/{userId}'
    metadata:
      groupName: 'Document(Internal) Endpoints'
      groupDescription: |-

        Document API endpoint
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Documents by User'
      description: 'Gets document list of all documents owned by a specified user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      userId:
        name: userId
        description: 'The id of the user.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      userId: 6
    queryParameters:
      title:
        name: title
        description: 'Filters documents by title.'
        required: false
        example: 'Titulo 1'
        type: string
        custom: []
      abstract:
        name: abstract
        description: 'Filters documents by abstract.'
        required: false
        example: 'Abstract 1'
        type: string
        custom: []
      document_state:
        name: document_state
        description: "Filters documents by it's state (Accepted Published and Pending only)."
        required: false
        example: Published
        type: string
        custom: []
      document_type:
        name: document_type
        description: "Filters documents by it's type."
        required: false
        example: 'Artigo Cientifico'
        type: string
        custom: []
      publish_date_from:
        name: publish_date_from
        description: 'datetime Filters to return only documents published after this date.'
        required: false
        example: '2020-12-22'
        type: string
        custom: []
      publish_date_to:
        name: publish_date_to
        description: 'datetime Filters to return only documents published before this date.'
        required: false
        example: '2026-12-22'
        type: string
        custom: []
      page:
        name: page
        description: 'Pagination -> number of the page to see.'
        required: false
        example: 1
        type: integer
        custom: []
      page_size:
        name: page_size
        description: 'Pagination -> number of documents to see per page.'
        required: false
        example: 10
        type: integer
        custom: []
      orderBy:
        name: orderBy
        description: 'Sorting -> Field by which documents are sorted.'
        required: false
        example: source
        type: string
        custom: []
      orderDir:
        name: orderDir
        description: 'Sorting -> Sorting direction.'
        required: false
        example: 0
        type: integer
        custom: []
    cleanQueryParameters:
      title: 'Titulo 1'
      abstract: 'Abstract 1'
      document_state: Published
      document_type: 'Artigo Cientifico'
      publish_date_from: '2020-12-22'
      publish_date_to: '2026-12-22'
      page: 1
      page_size: 10
      orderBy: source
      orderDir: 0
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 35,
           "user_id": 6,
             "document_state": "Pending",
           "publish_date": "2025-12-22 18:00:11",
           "document_type": "Artigo Cientifico",
           "document_title": "Titulo de documento",
           "doi": null,
           "url": null,
           "source": "Internal",
           "document_abstract": "quis",
           "document_keywords": [
               "laudantium"
           ],
           "document_authors": []
           }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DVafZ186v4bP3kEd5eac6hg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/document
    metadata:
      groupName: 'Document(Internal) Endpoints'
      groupDescription: |-

        Document API endpoint
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Submit Document'
      description: |-
        Submits document.
        MUST first upload temporary file with api/temp_file
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      temp_document_folder:
        name: temp_document_folder
        description: 'Sub-folder within temp folder where the file was temporarily uploaded to.'
        required: true
        example: 6449343e3d09e-1682519102
        type: string
        custom: []
      document_filename:
        name: document_filename
        description: 'File name of the temporary file uploaded.'
        required: true
        example: document.pdf
        type: string
        custom: []
    cleanQueryParameters:
      temp_document_folder: 6449343e3d09e-1682519102
      document_filename: document.pdf
    bodyParameters:
      document_type_id:
        name: document_type_id
        description: 'ID of the document (Full list of ids can be retreived with api/document_types).'
        required: true
        example: 1
        type: integer
        custom: []
      publish_date:
        name: publish_date
        description: 'Publish date of the document.'
        required: true
        example: '2025-12-22 18:00:11'
        type: datetime
        custom: []
      document_metadata:
        name: document_metadata
        description: 'Document metadata. MUST HAVE AT LEAST A TITLE (id=1)'
        required: true
        example:
          -
            value: quis
            metadata_type:
              id: 1
              description: 'Title 1'
          -
            value: laudantium
            metadata_type:
              id: 2
              description: 'abstract 1'
        type: 'object[]'
        custom: []
    cleanBodyParameters:
      document_type_id: 1
      publish_date: '2025-12-22 18:00:11'
      document_metadata:
        -
          value: quis
          metadata_type:
            id: 1
            description: 'Title 1'
        -
          value: laudantium
          metadata_type:
            id: 2
            description: 'abstract 1'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
               "id" : 302
               "message" : "Document Submited"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "temp_document_folder missing. Upload a temporary file first with api/temp_file"
          }
        headers: []
        description: 'Temp folder missing'
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "document_filename missing. Upload a temporary file first with api/temp_file"
          }
        headers: []
        description: 'Temp filename missing'
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "Temporary file missing! Upload a temporary file first with api/temp_file"
          }
        headers: []
        description: 'Temp file given not in temp foder'
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "You're document MUST have a title!"
          }
        headers: []
        description: 'No title'
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "You're document CAN ONLY have ONE title!"
          }
        headers: []
        description: 'Multiple titles'
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "You're document CAN ONLY have ONE abstract!"
          }
        headers: []
        description: 'Multiple Abstracts'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gh66a4kP13VaEbcvdZDf58e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/document/{id}'
    metadata:
      groupName: 'Document(Internal) Endpoints'
      groupDescription: |-

        Document API endpoint
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Edit Document'
      description: 'Edits document.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the document.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      document_type_id:
        name: document_type_id
        description: 'ID of the document (Full list of ids can be retreived with api/document_types).'
        required: false
        example: 1
        type: integer
        custom: []
      publish_date:
        name: publish_date
        description: 'Publish date of the document.'
        required: false
        example: '2025-12-22 18:00:11'
        type: datetime
        custom: []
      document_metadata:
        name: document_metadata
        description: 'Document metadata. MUST HAVE AT LEAST A TITLE (id=1)'
        required: false
        example:
          -
            value: quis
            metadata_type:
              id: 1
              description: 'Title 1'
          -
            value: laudantium
            metadata_type:
              id: 2
              description: 'abstract 1'
        type: 'object[]'
        custom: []
    cleanBodyParameters:
      document_type_id: 1
      publish_date: '2025-12-22 18:00:11'
      document_metadata:
        -
          value: quis
          metadata_type:
            id: 1
            description: 'Title 1'
        -
          value: laudantium
          metadata_type:
            id: 2
            description: 'abstract 1'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
               "message" : "Changes Submited"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "The document you're trying to edit doesn't exist"
          }
        headers: []
        description: 'Document ID doesnt exist'
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "You're document MUST have a title!"
          }
        headers: []
        description: 'No title'
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "You're document CAN ONLY have ONE title!"
          }
        headers: []
        description: 'Multiple titles'
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "You're document CAN ONLY have ONE abstract!"
          }
        headers: []
        description: 'Multiple Abstracts'
        custom: []
      -
        status: 403
        content: |-
          {
               "error": "You don't have authorization to edit this file"
          }
        headers: []
        description: 'Not document owner nor Admin'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h5eZg3dD6V4vPEcafkb86a1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/document/{id}'
    metadata:
      groupName: 'Document(Internal) Endpoints'
      groupDescription: |-

        Document API endpoint
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Document'
      description: |-
        HARD deletes document.
        DO NOT USE if not certain.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the document.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
               "message" : "Document Deleted"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: |-
          {
               "error": "The document you're trying to delete doesn't exist"
          }
        headers: []
        description: 'Document ID doesnt exist'
        custom: []
      -
        status: 403
        content: |-
          {
               "error": "You don't have authorization to delete this file"
          }
        headers: []
        description: 'Not document owner nor Admin'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D5ea8PZk66bVvacEh3dg14f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/temp_file
    metadata:
      groupName: 'Document(Internal) Endpoints'
      groupDescription: |-

        Document API endpoint
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Upload Temporary File'
      description: |-
        This endpoint saves a file on the request to a temporary location
        and persists it's meta to a database table
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      upload_file:
        name: upload_file
        description: 'The document to upload on the form-data.'
        required: true
        example: null
        type: file
        custom: []
    cleanBodyParameters: []
    fileParameters:
      upload_file: null
    responses:
      -
        status: 201
        content: |-
          {
               "folder": "6449ce12a98dc-1682558482",
               "filename": "book.pdf",
               "updated_at": "2023-04-27T01:21:22.000000Z",
               "created_at": "2023-04-27T01:21:22.000000Z",
               "id": 78
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aa6vP8h1fD35EgkZ6Veb4dc'
    controller: null
    method: null
    route: null
    custom: []
